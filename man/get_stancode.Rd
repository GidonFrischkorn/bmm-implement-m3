% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/helpers-model.R
\name{get_stancode}
\alias{get_stancode}
\title{Generate Stan code for bmm models}
\usage{
get_stancode(formula, data, model, prior = NULL, ...)
}
\arguments{
\item{formula}{An object of class \code{brmsformula}. A symbolic description of
the model to be fitted.}

\item{data}{An object of class data.frame, containing data of all variables
used in the model. The names of the variables must match the variable names
passed to the \code{bmmmodel} object for required argurments.}

\item{model}{A description of the model to be fitted. This is a call to a
\code{bmmmodel} such as \code{mixture3p()} function. Every model function has a
number of required arguments which need to be specified within the function
call. Call \code{\link[=supported_models]{supported_models()}} to see the list of supported models and
their required arguments}

\item{...}{Further arguments passed to \code{\link[brms:make_stancode]{brms::make_stancode()}}. See the
description of \code{\link[brms:make_stancode]{brms::make_stancode()}} for more details}
}
\value{
A character string containing the fully commented Stan code to fit a brms model.
}
\description{
A wrapper around \code{brms_stancode} for models specified with \code{bmm}.
Given the \code{model}, the \code{data} and the \code{formula} for the model, this function will return
the combined stan code generated by \code{bmm} and \code{brms}
}
\details{
The following models are supported:
\itemize{
\item \code{IMMabc(non_targets, setsize)}
\item \code{IMMbsc(non_targets, setsize, spaPos)}
\item \code{IMMfull(non_targets, setsize, spaPos)}
\item \code{mixture2p()}
\item \code{mixture3p(non_targets, setsize)}
\item \code{sdmSimple()}
}

Type \code{?modelname} to get information about a specific model, e.g. \code{?IMMfull}

Type \code{help(package=bmm)} for a full list of available help topics.
}
\examples{
\dontrun{
# generate artificial data from the Signal Discrimination Model
dat <- data.frame(y=rsdm(n=2000))

# define formula
ff <- brms::bf(y ~ 1,
               c ~ 1,
               kappa ~ 1)

# fit the model
get_stancode(formula = ff,
             data = dat,
             model = sdmSimple()
)
}

}
\seealso{
\code{\link[=supported_models]{supported_models()}}, \code{\link[brms:make_stancode]{brms::make_stancode()}}
}
